# SSH Client Configuration
# This file allows you to define shortcuts and settings for connecting to remote servers

# Default settings for all hosts
Host *
    ServerAliveInterval 60
    ServerAliveCountMax 3
    StrictHostKeyChecking ask
    UserKnownHostsFile ~/.ssh/known_hosts
    AddKeysToAgent yes

# ==> Production Servers
Host prod-web
    HostName prod-web.example.com
    User ubuntu
    Port 22
    IdentityFile ~/.ssh/id_ed25519_prod_server
    
Host prod-db
    HostName prod-db.example.com
    User ubuntu
    Port 22
    IdentityFile ~/.ssh/id_rsa_prod_server

# ==> Staging Environment
Host staging
    HostName staging.example.com
    User ubuntu
    Port 2222
    IdentityFile ~/.ssh/id_rsa_staging_server
    
# ==> Development Servers
Host dev-api
    HostName dev-api.internal
    User developer
    Port 22
    IdentityFile ~/.ssh/id_ed25519_dev_server
    ProxyJump bastion

# ==> Bastion/Jump Server
Host bastion
    HostName bastion.example.com
    User admin
    Port 22
    IdentityFile ~/.ssh/id_rsa_bastion

# ==> Cloud Providers
Host aws-web
    HostName ec2-xxx-xxx-xxx.amazonaws.com
    User ec2-user
    IdentityFile ~/.ssh/aws_ec2_key
    
Host gcp-web
    HostName gcp-instance.zone.c.project.internal
    User gcp-user
    IdentityFile ~/.ssh/gcp_key

# ==> Version Control
Host github-work
    HostName github.com
    User git
    IdentityFile ~/.ssh/github_work_key
    
Host gitlab-company
    HostName gitlab.company.com
    User git
    Port 443
    IdentityFile ~/.ssh/gitlab_company_key

# ==> Docker Registry
Host registry
    HostName registry.company.com
    User docker
    Port 22
    IdentityFile ~/.ssh/registry_key

# ==> Database Servers (through tunnel)
Host db-prod
    HostName db-prod.internal
    User postgres
    Port 5432
    IdentityFile ~/.ssh/db_key
    ProxyJump bastion
    LocalForward 5432 localhost:5432
