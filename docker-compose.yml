volumes:
  home_data:
  docker_data:

services:
  docker-in-docker:
    image: docker:dind
    container_name: ${COMPOSE_PROJECT_NAME}-dind
    privileged: true
    restart: unless-stopped
    volumes:
      - docker_data:/var/lib/docker
    ports:
      - "2376:2376"
    environment:
      - DOCKER_TLS_CERTDIR=
      - DOCKER_HOST=tcp://0.0.0.0:2376
    command: ["dockerd", "--host=tcp://0.0.0.0:2376", "--tls=false"]
    networks:
      - ws-net

  workspace:
    image: ${DOCKER_IMAGE_REPOSITORY}:${DOCKER_IMAGE_TAG}
    container_name: ${DOCKER_CONTAINER_NAME}
    build:
      context: ./
      dockerfile: Dockerfile.base
      args:
        # Timezone
        TZ: ${TZ}
        # User configuration
        USERNAME: ${USERNAME}
        USER_UID: ${USER_UID}
        USER_GID: ${USER_GID}
        ROOT_PASSWORD: ${ROOT_PASSWORD}
        USER_PASSWORD: ${USER_PASSWORD}
        # Core development tools
        INSTALL_PYTHON: ${INSTALL_PYTHON}
        INSTALL_ANSIBLE: ${INSTALL_ANSIBLE}
        INSTALL_VOLTA: ${INSTALL_VOLTA}
        INSTALL_K8S: ${INSTALL_K8S}
        # CLI tools versions
        INSTALL_TASK: ${INSTALL_TASK}
        INSTALL_LAZYDOCKER: ${INSTALL_LAZYDOCKER}
        INSTALL_LAZYGIT: ${INSTALL_LAZYGIT}
        INSTALL_YQ: ${INSTALL_YQ}
        TASK_VERSION: ${TASK_VERSION}
        LAZYDOCKER_VERSION: ${LAZYDOCKER_VERSION}
        YQ_VERSION: ${YQ_VERSION}
        LAZYGIT_VERSION: ${LAZYGIT_VERSION}
        KUBECTL_VERSION: ${KUBECTL_VERSION}
        HELM_VERSION: ${HELM_VERSION}
        K9S_VERSION: ${K9S_VERSION}
        # SSH configuration
        INSTALL_OPENSSH_SERVER: ${INSTALL_OPENSSH_SERVER}
        SSH_PORT: ${SSH_PORT}
        # Additional development tools
        INSTALL_CRONTAB: ${INSTALL_CRONTAB}
        INSTALL_NGROK: ${INSTALL_NGROK}
        NGROK_VERSION: ${NGROK_VERSION}
        INSTALL_TAILSCALE: ${INSTALL_TAILSCALE}
        TAILSCALE_VERSION: ${TAILSCALE_VERSION}
        INSTALL_TERRAFORM: ${INSTALL_TERRAFORM}
        TERRAFORM_VERSION: ${TERRAFORM_VERSION}
        INSTALL_CLOUDFLARE: ${INSTALL_CLOUDFLARE}
        CLOUDFLARE_VERSION: ${CLOUDFLARE_VERSION}
        INSTALL_TELEPORT: ${INSTALL_TELEPORT}
        TELEPORT_VERSION: ${TELEPORT_VERSION}
        INSTALL_DRY: ${INSTALL_DRY}
        DRY_VERSION: ${DRY_VERSION}
        INSTALL_WP_CLI: ${INSTALL_WP_CLI}
        WP_CLI_VERSION: ${WP_CLI_VERSION}
        INSTALL_DOCKER: ${INSTALL_DOCKER}
        DOCKER_VERSION: ${DOCKER_VERSION}
        INSTALL_SUPERVISOR: ${INSTALL_SUPERVISOR}
        INSTALL_DBEAVER: ${INSTALL_DBEAVER}
        DBEAVER_VERSION: ${DBEAVER_VERSION}
    restart: unless-stopped
    working_dir: ${APP_CODE_PATH_CONTAINER}
    tty: true
    ports:
      - "${SSH_FORWARD_PORT}:${SSH_PORT}"
    depends_on:
      - docker-in-docker
    environment:
      - DOCKER_HOST=tcp://docker-in-docker:2376
    networks:
      - ws-net
    # volumes:
    #   - home_data:/home/${USERNAME}

networks:
  ws-net:
    driver: bridge
